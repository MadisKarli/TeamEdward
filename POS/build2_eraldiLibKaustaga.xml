<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="POS.makejar" default="build">

	<!-- Definitions of variables used during the rest of this script -->

	<property file="build.properties" />
	<property name="build.dir" value="${basedir}/build" />
	<property name="build.classes.dir" value="${build.dir}/classes" />
	<property name="src.dir" value="${basedir}/src" />
	<property name="dist.dir" value="${basedir}/dist" />
	<property name="conf.dir" value="${basedir}/etc" />
	<property name="doc.dir" value="${build.dir}/doc" />
	<property name="test.reports.dir" value="${build.dir}/reports/" />
	<property name="main-class" value="ee.ut.math.tvt.teamedward.Intro" />
	<property name="team-name" value="teamedward" />
	<property name="libraries" value="lib/log4j-1.2.17.jar lib/commons-codec-1.9.jar lib/commons-configuration-1.10.jar lib/commons-lang-2.6.jar lib/commons-logging-1.2.jar" />


	<!-- Definitions of classpath variants used for different tasks -->
	<path id="compile.classpath">
		<fileset dir="lib">
			<include name="*.jar" />
		</fileset>
	</path>


	<path id="test.classpath">
		<pathelement location="${build.classes.dir}" />
		<!-- configuration -->
		<pathelement location="${conf.dir}" />
	</path>

	<!-- Definitions of runnable ant targets.
         Run them from the command line by executing "ant [targetname]"  -->

	<target name="run" depends="dist" description="Run application in eclipse">
		<java fork="yes" classname="${main-class}">
			<classpath>
				<pathelement path="${build.dir}/classes" />
				<!-- All librarys manually -->
				<pathelement location="lib/log4j-1.2.17.jar" />
				<pathelement location="lib/commons-codec-1.9.jar" />
				<pathelement location="lib/commons-configuration-1.10.jar" />
				<pathelement location="lib/commons-lang-2.6.jar" />
				<pathelement location="lib/commons-logging-1.2.jar" />
			</classpath>
		</java>
	</target>


	<target name="build" depends="clean" description="Build the system">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.classes.dir}" />
		<javac srcdir="${src.dir}" destdir="${build.classes.dir}" debug="true" debuglevel="lines,vars,source" encoding="utf-8" compiler="modern" target="1.7" source="1.7" includeantruntime="false">
			<classpath refid="compile.classpath" />
		</javac>
	</target>


	<target name="dist" depends="build" description="Createse in the folder build/jar a spearate JAR file that has all classes, property files and other components required for running Intro window.">
		<mkdir dir="build/jar/" />
		<copydir src="lib" dest="build/jar/lib" />
		<!--creates .jar -->
		<jar destfile="build/jar/${team-name}.jar" basedir="${build.classes.dir}">
			<!-- includes classes, app and ver properties to jar -->
			<fileset dir="${basedir}">
				<include name="application.properties" />
				<include name="version.properties" />
				<include name="lib/**" />
			</fileset>
			<manifest>
				<!-- as I understand this is the most important part and is responsible for .jar not working -->
				<attribute name="Main-Class" value="${main-class}" />
				<attribute name="Class-Path" value="${libraries}" />
			</manifest>
		</jar>
		<!-- increse build revision number by 1-->
		<propertyfile file="version.properties" comment="Version properties">
			<entry key="build.revision.number" default="0" type="int" operation="+" />
		</propertyfile>
	</target>


	<!--doesnotwork.java -->
	<target name="jrun" depends="git_commit" description="Run teamedward.jar. Doesnotwork">
		<java fork="yes" jar="build/jar/${team-name}.jar" />
	</target>


	<!-- Build internal documentation -->
	<target name="javadoc" description="Build internal documentation">
		<mkdir dir="${doc.dir}" />
		<javadoc destdir="${doc.dir}" classpathref="compile.classpath">
			<fileset dir="${src.dir}" includes="**/*.java" />
		</javadoc>
	</target>
	<!-- git macro -->
	<macrodef name="git">
		<attribute name="command" />
		<attribute name="dir" default="" />
		<element name="args" optional="true" />
		<sequential>
			<echo message="git @{command}" />
				<exec executable="git" dir="@{dir}">
				<arg value="@{command}" />
				<args/>
			</exec>
		</sequential>
	</macrodef>	
	

	<!-- github commit -->
	<target name="git_commit" description="Commits changes to GitHub">

		<git command="add">
			<args>
				<arg value="-A" />
			</args>
		</git>
		
		<git command="commit">
			<args>
				<arg value="-m commit from build file" />
			</args>
		</git>

		<git command="push">
			<args>
				<arg value="https://MadisKarli:Ferdi21282@github.com/MadisKarli/TeamEdward.git" />
			</args>
		</git>
	</target>


	<!-- Clean up! -->
	<target name="clean" description="Clean up build system results">
		<delete dir="${build.dir}" />
	</target>


	<property file="version.properties" />
	<target name="info">
		<echo> ${build} </echo>
	</target>

</project>

